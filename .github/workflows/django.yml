name: Django CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      MAILCHIMP_API_KEY: ${{ secrets.MAILCHIMP_API_KEY }}
      MAILCHIMP_LIST_ID: ${{ secrets.MAILCHIMP_LIST_ID }}
      MAILCHIMP_DC: ${{ secrets.MAILCHIMP_DC }}
      HONEYBADGER_API_KEY: ${{ secrets.HONEYBADGER_API_KEY }}

    steps:
    # Checkout the repository
    - uses: actions/checkout@v4

    # Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.11

    # Install Python dependencies
    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Set up Node.js for Vue.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    # Install frontend dependencies
    - name: Install Frontend Dependencies
      working-directory: static/webpack
      run: |
        npm install

    # Build the Vue.js frontend
    - name: Build Frontend
      working-directory: static/webpack
      run: |
        npm run build

    # Validate Environment Variables
    - name: Validate Environment Variables
      run: |
        : "${DB_NAME:?Environment variable DB_NAME is not set}"
        : "${DB_USER:?Environment variable DB_USER is not set}"
        : "${DB_PASSWORD:?Environment variable DB_PASSWORD is not set}"
        : "${DB_HOST:?Environment variable DB_HOST is not set}"
        : "${DB_PORT:?Environment variable DB_PORT is not set}"
        : "${MAILCHIMP_API_KEY:?Environment variable MAILCHIMP_API_KEY is not set}"
        : "${MAILCHIMP_LIST_ID:?Environment variable MAILCHIMP_LIST_ID is not set}"
        : "${MAILCHIMP_DC:?Environment variable MAILCHIMP_DC is not set}"
        : "${HONEYBADGER_API_KEY:?Environment variable HONEYBADGER_API_KEY is not set}"

    # Clear static files cache
    - name: Clear Static Files Cache
      run: |
        rm -f staticfiles/staticfiles.json || true

    # Collect Django static files
    - name: Collect Static Files
      run: |
        python manage.py collectstatic --noinput

    # Run Django tests
    - name: Run Tests
      run: |
        python manage.py test